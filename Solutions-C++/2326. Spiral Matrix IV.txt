class Solution {
    vector<vector<int>> dir = {{0,1}, {1, 0}, {0, -1}, {-1, 0}};
public:
    vector<vector<int>> spiralMatrix(int m, int n, ListNode* head) {
        vector<vector<int>> mat(m, vector<int>(n, -1));
        int i = 0, j = 0, dirindex = 0, ct = m*n;
        ListNode *ptr = head;
        while(ct>0 && ptr != nullptr) {
            int ni = i +  dir[dirindex][0], nj = j + dir[dirindex][1];
            mat[i][j] = ptr->val;
            if((dirindex==0 && j==n-1) || (dirindex==1 && i==m-1) || (dirindex==2 && j==0)) {
                dirindex++;
            } else if(mat[ni][nj] != -1) {
                dirindex = (dirindex + 1)%4;
            }
            i += dir[dirindex][0];
            j += dir[dirindex][1];
            ptr = ptr->next;
            ct--;
        }
        return mat;
    }
};